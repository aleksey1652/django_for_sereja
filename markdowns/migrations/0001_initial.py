# Generated by Django 4.1.6 on 2023-03-13 10:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_cables')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('r_price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='r_price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('cab_mat_ukr', models.CharField(db_index=True, default='-', max_length=300, verbose_name='cab_mat_ukr')),
                ('cab_mat_ru', models.CharField(db_index=True, default='-', max_length=300, verbose_name='cab_mat_ru')),
                ('cab_col_ukr', models.CharField(db_index=True, default='-', max_length=300, verbose_name='cab_col_ukr')),
                ('cab_col_ru', models.CharField(db_index=True, default='-', max_length=300, verbose_name='cab_col_ru')),
                ('cab_set', models.CharField(db_index=True, default='-', max_length=300, verbose_name='cab_set')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('cab_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('cab_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Кабеля_уценка',
                'verbose_name_plural': 'Кабеля_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='CASE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_case')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('case_s', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Case_s')),
                ('color_parent', models.CharField(blank=True, db_index=True, default='', max_length=300, null=True, verbose_name='Color_parent')),
                ('color', models.CharField(blank=True, db_index=True, default='', max_length=300, null=True, verbose_name='Color')),
                ('color_ukr', models.CharField(blank=True, db_index=True, default='', max_length=300, null=True, verbose_name='Color_ukr')),
                ('color_ru', models.CharField(blank=True, db_index=True, default='', max_length=300, null=True, verbose_name='Color_ru')),
                ('case_wcs_plus_size_ru', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет')], db_index=True, default='Нет', max_length=50, null=True, verbose_name='360мм СВО(ру)')),
                ('case_wcs_plus_size_ua', models.CharField(blank=True, choices=[('Так', 'Так'), ('Нi', 'Нi')], db_index=True, default='Нi', max_length=50, null=True, verbose_name='360мм СВО(укр)')),
                ('case_gpu_triple_fan_ru', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет')], db_index=True, default='Нет', max_length=50, null=True, verbose_name='3х куллерная карта(ру)')),
                ('case_gpu_triple_fan_ua', models.CharField(blank=True, choices=[('Так', 'Так'), ('Нi', 'Нi')], db_index=True, default='Нi', max_length=50, null=True, verbose_name='3х куллерная карта(укр)')),
                ('case_count_fan', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('4+', '4+')], db_index=True, default='2', max_length=50, null=True, verbose_name='Кол вентиляторов')),
                ('depend_to', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_to')),
                ('depend_to_type', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_to_type')),
                ('case_height', models.CharField(blank=True, db_index=True, default='-', max_length=30, null=True, verbose_name='case_height')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('case_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('case_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Корпус_уценка',
                'verbose_name_plural': 'Корпуса_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind_assembly', models.CharField(db_index=True, default='Акционный', max_length=50, verbose_name='Серия')),
                ('desc_ru', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='Описание_рус')),
                ('desc_ukr', models.CharField(blank=True, db_index=True, max_length=500, null=True, verbose_name='Описание_укр')),
            ],
            options={
                'verbose_name': 'Серии сайта',
                'verbose_name_plural': 'Серии сайта',
            },
        ),
        migrations.CreateModel(
            name='Cooler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_cooler')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('fan_type_ua', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Fan_type_ua')),
                ('fan_type_rus', models.CharField(db_index=True, default='-', max_length=300, verbose_name='fan_type_rus')),
                ('fan_spd_ua', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Fan_spd_ua')),
                ('fan_spd_rus', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Fan_spd_rus')),
                ('fan_noise_level', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Fan_noise_level')),
                ('fan_size', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Fan_size')),
                ('depend_to', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_to')),
                ('depend_to_type', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_to_type')),
                ('cooler_height', models.CharField(blank=True, db_index=True, default='-', max_length=30, null=True, verbose_name='cooler_height')),
                ('fan_triple_wcs_rus', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет')], db_index=True, default='Нет', max_length=50, null=True, verbose_name='СВО 3х куллерная(ру)')),
                ('fan_triple_wcs_ua', models.CharField(blank=True, choices=[('Так', 'Так'), ('Нi', 'Нi')], db_index=True, default='Нi', max_length=50, null=True, verbose_name='СВО 3х куллерная(укр)')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('fan_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('fan_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Кулер_уценка',
                'verbose_name_plural': 'Кулеры_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_cpu')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('f_name', models.CharField(db_index=True, default='-', max_length=300, verbose_name='f_name')),
                ('cpu_c_t', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Cpu_c_t')),
                ('f_cpu_c_t', models.CharField(db_index=True, default='-', max_length=300, verbose_name='F_cpu_c_t')),
                ('cpu_b_f', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Cpu_b_f')),
                ('cpu_cache', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Cpu_cache')),
                ('cpu_i_g_ua', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Cpu_i_g_ua')),
                ('cpu_i_g_rus', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Cpu_i_g_rus')),
                ('depend_from', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Depend_from')),
                ('depend_from_type', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Depend_from_type')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('cpu_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('cpu_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Проц_уценка',
                'verbose_name_plural': 'Проц_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='FAN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_fan')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Vendor')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('case_fan_spd_ua', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Case_fan_spd_ua')),
                ('case_fan_spd_rus', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Case_fan_spd_rus')),
                ('case_fan_noise_level', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Case_fan_noise_level')),
                ('case_fan_size', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Case_fan_size')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('case_fan_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('case_fan_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Вент_уценка',
                'verbose_name_plural': 'Вент_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_gpu')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('main_category', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Main_category')),
                ('f_name', models.CharField(db_index=True, default='-', max_length=300, verbose_name='f_name')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('gpu_fps', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Gpu_fps')),
                ('gpu_m_s', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Gpu_m_s')),
                ('gpu_b', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Gpu_b')),
                ('gpu_cpu_spd', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Gpu_cpu_spd')),
                ('gpu_mem_spd', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Gpu_mem_spd')),
                ('gpu_triple_fan_rus', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет')], db_index=True, default='Нет', max_length=10, null=True, verbose_name='3х куллерная карта(ру)')),
                ('gpu_triple_fan_ua', models.CharField(blank=True, choices=[('Так', 'Так'), ('Нi', 'Нi')], db_index=True, default='Нi', max_length=10, null=True, verbose_name='3х куллерная карта(укр)')),
                ('depend_to', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_to')),
                ('depend_to_type', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_to_type')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('gpu_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('gpu_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Видео_уценка',
                'verbose_name_plural': 'Видео_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='HDD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_hdd')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('f_name', models.CharField(db_index=True, default='-', max_length=300, verbose_name='f_name')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('hdd_s', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Hdd_s')),
                ('hdd_spd_ua', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Hdd_spd_ua')),
                ('hdd_spd_rus', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Hdd_spd_rus')),
                ('hdd_ca', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Hdd_ca')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('hdd_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('hdd_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Жест_диск_уценка',
                'verbose_name_plural': 'Жест_диски_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='WiFi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_wifi')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('r_price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='r_price')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('net_type_ukr', models.CharField(db_index=True, default='-', max_length=300, verbose_name='net_type_ukr')),
                ('net_type_rus', models.CharField(db_index=True, default='-', max_length=300, verbose_name='net_type_rus')),
                ('net_max_spd', models.CharField(db_index=True, default='-', max_length=300, verbose_name='net_max_spd')),
                ('net_stand', models.CharField(db_index=True, default='-', max_length=300, verbose_name='net_stand')),
                ('net_int', models.CharField(db_index=True, default='-', max_length=300, verbose_name='net_int')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('net_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('net_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ВайФай_уценка',
                'verbose_name_plural': 'ВайФай_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='SSD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_ssd')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('f_name', models.CharField(db_index=True, default='-', max_length=300, verbose_name='f_name')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('ssd_s', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Ssd_s')),
                ('ssd_spd', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Ssd_spd')),
                ('ssd_r_spd', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Ssd_r_spd')),
                ('ssd_type_cells', models.CharField(db_index=True, default='-', max_length=300, verbose_name='ssd_type_cells')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('ssd_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('ssd_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ССД_уценка',
                'verbose_name_plural': 'ССД_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='Soft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='-', max_length=300, unique=True, verbose_name='Name_soft')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('r_price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='r_price')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('soft_type_ukr', models.CharField(db_index=True, default='-', max_length=300, verbose_name='soft_type_ukr')),
                ('soft_type_ru', models.CharField(db_index=True, default='-', max_length=300, verbose_name='soft_type_ru')),
                ('soft_lang_ukr', models.CharField(db_index=True, default='-', max_length=300, verbose_name='soft_lang_ukr')),
                ('soft_lang_ru', models.CharField(db_index=True, default='-', max_length=300, verbose_name='soft_lang_ru')),
                ('soft_set', models.CharField(db_index=True, default='-', max_length=300, verbose_name='soft_set')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('soft_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('soft_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ПО_уценка',
                'verbose_name_plural': 'ПО_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_ram')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('f_name', models.CharField(db_index=True, default='-', max_length=300, verbose_name='f_name')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('mem_s', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Mem_s')),
                ('mem_spd', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Mem_spd')),
                ('mem_type', models.CharField(blank=True, choices=[('DDR3', 'DDR3'), ('DDR4', 'DDR4'), ('DDR5', 'DDR5')], db_index=True, default='DDR4', max_length=50, null=True, verbose_name='Тип памяти')),
                ('mem_l', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Mem_l')),
                ('depend_from', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='depend_from')),
                ('depend_from_type', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='depend_from_type')),
                ('depend_to', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='depend_to')),
                ('depend_to_type', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='depend_to_type')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('mem_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('mem_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Память_уценка',
                'verbose_name_plural': 'Память_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='PSU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_psu')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('psu_p', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Psu_p')),
                ('psu_c', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Psu_c')),
                ('psu_f', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Psu_f')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('psu_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('psu_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'БП_уценка',
                'verbose_name_plural': 'БП_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='MB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name_mb')),
                ('part_number', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Part_number')),
                ('vendor', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Vendor')),
                ('main_category', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Main_category')),
                ('price', models.FloatField(db_index=True, default=0, max_length=300, verbose_name='Price')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ukr', models.TextField(db_index=True, default='-', verbose_name='Desc_ukr')),
                ('desc_ru', models.TextField(db_index=True, default='-', verbose_name='Desc_ru')),
                ('mb_chipset', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Mb_chipset')),
                ('mb_max_ram', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Mb_max_ram')),
                ('mb_count_slot', models.CharField(blank=True, choices=[('2', '2'), ('4', '4'), ('8', '8')], db_index=True, default='2', max_length=50, null=True, verbose_name='Кол слотов памяти')),
                ('mb_type_memory', models.CharField(blank=True, choices=[('DDR3', 'DDR3'), ('DDR4', 'DDR4'), ('DDR5', 'DDR5')], db_index=True, default='DDR4', max_length=50, null=True, verbose_name='Тип памяти')),
                ('depend_to', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Depend_to')),
                ('depend_to_type', models.CharField(db_index=True, default='-', max_length=300, verbose_name='Depend_to_type')),
                ('depend_from', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_from')),
                ('depend_from_type', models.CharField(blank=True, db_index=True, default='-', max_length=300, null=True, verbose_name='Depend_from_type')),
                ('label', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='label')),
                ('mb_warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('mb_warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Мат_плата_уценка',
                'verbose_name_plural': 'Мат_платы_уценка',
                'ordering': ['name'],
                'unique_together': {('part_number', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='Mark_short',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_parts', models.CharField(db_index=True, max_length=300, verbose_name='Название')),
                ('x_code', models.FloatField(db_index=True, default=0, max_length=50, verbose_name='Цена')),
                ('date_chg', models.DateTimeField(blank=True, null=True, verbose_name='Дата посл. изменения')),
                ('kind', models.CharField(blank=True, choices=[('cool', 'cool'), ('imb', 'imb'), ('amb', 'amb'), ('case', 'case'), ('ssd', 'ssd'), ('hdd', 'hdd'), ('aproc', 'aproc'), ('iproc', 'iproc'), ('video', 'video'), ('ps', 'ps'), ('mem', 'mem'), ('vent', 'vent'), ('mon', 'mon'), ('wifi', 'wifi'), ('km', 'km'), ('soft', 'soft'), ('cables', 'cables')], db_index=True, max_length=50, null=True, verbose_name='Вид')),
                ('kind2', models.BooleanField(default=True, verbose_name='active/deactive')),
                ('only_comp', models.BooleanField(default=False, verbose_name='только в комп/везде')),
                ('trade_in', models.BooleanField(default=False, verbose_name='trade_in')),
                ('cables_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.cables', verbose_name='Кабеля')),
                ('case_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.case', verbose_name='Корпус')),
                ('cooler_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.cooler', verbose_name='Кулер')),
                ('cpu_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.cpu', verbose_name='Проц')),
                ('fan_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.fan', verbose_name='Вентлтр')),
                ('gpu_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.gpu', verbose_name='Видео')),
                ('hdd_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.hdd', verbose_name='Ждиск')),
                ('mb_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.mb', verbose_name='Мать')),
                ('psu_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.psu', verbose_name='БП')),
                ('ram_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.ram', verbose_name='Память')),
                ('soft_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.soft', verbose_name='Софт')),
                ('ssd_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.ssd', verbose_name='ССД')),
                ('wifi_shorts', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='markdowns.wifi', verbose_name='ВайФай')),
            ],
            options={
                'verbose_name': 'Акция_деталь',
                'verbose_name_plural': 'АКЦИОННЫЕ_ДЕТАЛИ',
                'ordering': ['-name_parts'],
                'unique_together': {('name_parts', 'kind')},
            },
        ),
        migrations.CreateModel(
            name='Mark_computers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('date_computers', models.DateTimeField(auto_now=True)),
                ('name_computers', models.CharField(db_index=True, max_length=300, unique=True, verbose_name='Имя компьютера')),
                ('price_computers', models.FloatField(db_index=True, default=0, verbose_name='Сумма')),
                ('rentability', models.FloatField(db_index=True, default=40, verbose_name='Наценка')),
                ('desc_ru', models.CharField(db_index=True, default='пусто', max_length=300, verbose_name='Описание рус')),
                ('desc_ukr', models.CharField(db_index=True, default='пусто', max_length=300, verbose_name='Описание укр')),
                ('mem_num_computers', models.PositiveIntegerField(db_index=True, default=1, verbose_name='ОЗУ кол')),
                ('video_num_computers', models.PositiveIntegerField(db_index=True, default=1, verbose_name='Видеокарты кол')),
                ('vent_num_computers', models.PositiveIntegerField(db_index=True, default=1, verbose_name='Вентиляторы кол')),
                ('you_vid', models.CharField(db_index=True, default='пусто', max_length=300, verbose_name='you_vid')),
                ('warr_ua', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия укр')),
                ('warr_ru', models.CharField(blank=True, db_index=True, max_length=300, null=True, verbose_name='гарантия ру')),
                ('cables', models.ForeignKey(blank=True, limit_choices_to={'kind': 'cables'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cables', to='markdowns.mark_short', verbose_name='Кабеля')),
                ('case', models.ForeignKey(blank=True, limit_choices_to={'kind': 'case'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case', to='markdowns.mark_short', verbose_name='Корпус')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='markdowns.category', verbose_name='Серия')),
                ('cooler', models.ForeignKey(blank=True, limit_choices_to={'kind': 'cool'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cooler', to='markdowns.mark_short', verbose_name='Кулер')),
                ('cpu', models.ForeignKey(blank=True, limit_choices_to=models.Q(('kind__in', ('aproc', 'iproc'))), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cpu', to='markdowns.mark_short', verbose_name='Проц')),
                ('fan', models.ForeignKey(blank=True, limit_choices_to={'kind': 'vent'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fan', to='markdowns.mark_short', verbose_name='Вентилятор')),
                ('gpu', models.ForeignKey(blank=True, limit_choices_to={'kind': 'video'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gpu', to='markdowns.mark_short', verbose_name='Видео')),
                ('hdd', models.ForeignKey(blank=True, limit_choices_to={'kind': 'hdd'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hdd', to='markdowns.mark_short', verbose_name='НДД')),
                ('km', models.ForeignKey(blank=True, limit_choices_to={'kind': 'km'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='km', to='markdowns.mark_short', verbose_name='КлМышь')),
                ('mb', models.ForeignKey(blank=True, limit_choices_to=models.Q(('kind__in', ('amb', 'imb'))), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mb', to='markdowns.mark_short', verbose_name='Мат плата')),
                ('mon', models.ForeignKey(blank=True, limit_choices_to={'kind': 'mon'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mon', to='markdowns.mark_short', verbose_name='Монитор')),
                ('psu', models.ForeignKey(blank=True, limit_choices_to={'kind': 'ps'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='psu', to='markdowns.mark_short', verbose_name='БП')),
                ('ram', models.ForeignKey(blank=True, limit_choices_to={'kind': 'mem'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ram', to='markdowns.mark_short', verbose_name='ОЗУ')),
                ('soft', models.ForeignKey(blank=True, limit_choices_to={'kind': 'soft'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='soft', to='markdowns.mark_short', verbose_name='ПО')),
                ('ssd', models.ForeignKey(blank=True, limit_choices_to={'kind': 'ssd'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ssd', to='markdowns.mark_short', verbose_name='ССД')),
                ('wifi', models.ForeignKey(blank=True, limit_choices_to={'kind': 'wifi'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wifi', to='markdowns.mark_short', verbose_name='ВайФай')),
            ],
            options={
                'verbose_name': 'Акционный_компьютер',
                'verbose_name_plural': 'АКЦИОННЫЕ_КОМПЬЮТЕРЫ',
                'ordering': ['-name_computers'],
            },
        ),
    ]
